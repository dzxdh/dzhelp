buildscript {
    ext{
        kotlin_version = '1.1.51'
        shadow_version = '2.0.1'
    }

    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.github.jengelman.gradle.plugins:shadow:$shadow_version"
    }
}
plugins {
    id 'application'
    id 'com.github.johnrengelman.shadow' version '1.2.3'
}

repositories {
    jcenter()
}

version = '1.0-SNAPSHOT'
sourceCompatibility = '1.8'
mainClassName = 'io.vertx.core.Launcher'

def vertxVersion = '3.5.0'
def mainVerticleName = 'xdh.hongrenzhuang.web.MainVerticle'
def watchForChange = 'src/**/*'
def doOnChange = './gradlew classes'

dependencies {
    //kt运行时环境
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    //core核心包
    compile "io.vertx:vertx-core:$vertxVersion"
    //Web
    compile "io.vertx:vertx-web:$vertxVersion"
    //MongoDB Client
    compile "io.vertx:vertx-mongo-client:$vertxVersion"
    //服务代理
    compile "io.vertx:vertx-service-proxy:$vertxVersion"
    compile "io.vertx:vertx-service-proxy:$vertxVersion:processor"
    //vertx-codegen
    compileOnly "io.vertx:vertx-codegen:$vertxVersion"
    //日志
    compile 'org.slf4j:slf4j-api:1.5.8'
    compile 'org.slf4j:slf4j-log4j12:1.5.8'
    //单元测试
    testCompile "junit:junit:4.12"
    testCompile "io.vertx:vertx-unit:$vertxVersion"
}
shadowJar {
    classifier = 'fat'
    manifest {
        attributes "Main-Verticle": mainVerticleName
    }
    mergeServiceFiles {
        include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
    }
}

run {
    args = ['run', mainVerticleName, "--redeploy=$watchForChange", "--launcher-class=$mainClassName", "--on-redeploy=$doOnChange"]
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.0'
}

task annotationProcessing(type: JavaCompile, group: 'build') { // codegen
    source = sourceSets.main.java
    classpath = configurations.compile + configurations.compileOnly
    destinationDir = project.file('src/main/generated')
    options.compilerArgs = [
            "-proc:only",
            "-processor", "io.vertx.codegen.CodeGenProcessor",
            "-AoutputDirectory=${project.projectDir}/src/main"
    ]
}

compileJava {
    targetCompatibility = 1.8
    sourceCompatibility = 1.8

    dependsOn annotationProcessing
}

sourceSets {
    main {
        java {
            srcDirs += 'src/main/generated'
        }
    }
}
